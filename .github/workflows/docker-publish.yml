name: Build and Publish Docker Images

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag to use (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-and-push:
    name: Build and push Docker images
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set version variable
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          fi

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true

      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@main

      - name: Install cargo-make
        run: cargo binstall cargo-make -y

      - name: Install cross
        run: cargo binstall cross -y

      - name: Install Dioxus CLI
        run: cargo binstall dioxus-cli -y

      - name: Cache cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build for x86_64
        run: cargo make build-x86_64

      - name: Build for aarch64
        run: cargo make build-aarch64

      - name: Create bundle
        run: cargo make create-bundle

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: enaut
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push x86_64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./x86_64.Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            enaut/pslink:x86_64-latest
            enaut/pslink:x86_64-${{ env.VERSION }}

      - name: Build and push aarch64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./aarch64.Dockerfile
          platforms: linux/arm64
          push: true
          tags: |
            enaut/pslink:aarch64-latest
            enaut/pslink:aarch64-${{ env.VERSION }}

      - name: Create and push multi-arch manifest
        run: |
          docker manifest create enaut/pslink:latest \
            enaut/pslink:aarch64-latest \
            enaut/pslink:x86_64-latest
          
          docker manifest create enaut/pslink:${{ env.VERSION }} \
            enaut/pslink:aarch64-${{ env.VERSION }} \
            enaut/pslink:x86_64-${{ env.VERSION }}
          
          docker manifest push enaut/pslink:latest
          docker manifest push enaut/pslink:${{ env.VERSION }}